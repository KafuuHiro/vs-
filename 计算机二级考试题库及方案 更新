#include "stdafx.h"
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
using namespace System;
using namespace std;

/*moban:
int main(array<System::String ^> ^args)
{

	system("pause");
    return 0;
}
*/

/*t1:
void fun(unsigned long *n) 
{
	unsigned long x=0, i; int t; 
	i=1; 
	while(*n) 
	{
		t=*n % 10; 
		if(t%2!= 0) 
		{
			x=x+t*i;
			i=i*10;
		} 
		*n =*n /10; 
	} 
	*n= x ; 
}

int main(array<System::String ^> ^args)
{
    unsigned long n=-1; 
	while(n>99999999||n<0) 
	{
		printf("Please input(0<n<100000000): ");
		scanf("%ld",&n);
	} 
	fun(&n); 
	printf("\nThe result is: %ld\n",n);
	system("pause");
    return 0;
}
*/

/*t2:
double fun ( int n ) 
{
	double result = 1.0 ; 
	if (n == 0||n == 1) 
		return 1.0 ; 
	while( n >1 && n < 170 ) 
		result *= n-- ;
	return result ; 
} 

int main(array<System::String ^> ^args)
{
	int n ; 
	printf("Input N:") ; 
	scanf("%d", &n) ; 
	printf("\n\n%d! =%lf\n\n", n, fun(n)) ;
	system("pause");
    return 0;
}
*/

/*t3:
long fun ( char *p) 
{
	int i, len, t; // len为串长，t为正负标识
	long x=0; 
	len=strlen(p); 
	if(p[0]=='-') 
	{
		t=-1; len--; p++;
	} 
	else t=1; 
// 以下完成数字字符串转换为一个数字 
	for(i=0;i<len;i++)
	{
		x=x*10+(*p-48);
		p++;
	}
	return x*t; 
}

int main(array<System::String ^> ^args)
{
	char s[6]; 
	long n; 
	printf("Enter a string:\n") ; 
	gets(s); 
	n = fun(s); 
	printf("%ld\n",n);
	system("pause");
    return 0;
}
*/

/*t4
void fun(char *s, int a, double f) 
{
	FILE* fp; 
	char ch; 
	fp = fopen("c:\\desk\\file1.txt", "w"); 
	fprintf(fp, "%s %d %f\n", s, a, f); 
	fclose(fp); 
	fp = fopen("file1.txt", "r"); 
	printf("\nThe result :\n\n"); 
	ch = fgetc(fp); 
	while (!feof(fp))
	{ 
		putchar(ch);
		ch = fgetc(fp);
	} 
	putchar('\n'); 
	fclose(fp); 
} 

int main(array<System::String ^> ^args)
{
	char a[10]="Hello!";
	int b=12345; 
	double c= 98.76; 
	fun(a,b,c);
	system("pause");
    return 0;
}
*/

/*t5
void fun(char *s) 
{
	int i,j; 
	for(i=0,j=0; s[i]!='\0'; i++) 
		if(s[i]>='0' && s[i]<='9') 
			s[j++]=s[i]; 
	s[j]='\0'; 
}

int main(array<System::String ^> ^args)
{
	char item[80]; 
	printf("\nEnter a string : ");
	gets(item); 
	printf("\n\nThe string is : \"%s\"\n",item); 
	fun(item); 
	printf("\n\nThe string of changing is : \"%s\"\n",item ); 
	system("pause");
    return 0;
}
*/

/*t6:
#define M 3 
#define N 4

void fun(char s[][N], char *b) 
{ 
	int i,j,n=0; 
	for(i=0; i < N;i++) // 请填写相应语句完成其功能 
	{ 
		for(j=0;j<M;j++)
		{
			*b=s[j][i];
			b++;
		}
	} 
	b[n]='\0';
}

int main(array<System::String ^> ^args)
{
	char a[100],w[M][N]={{'W','W','W','W'},{'S','S','S','S'},{'H','H','H','H'}}; 
	int i,j; 
	printf("The matrix:\n"); 
	for(i=0; i<M; i++) 
	{
		for(j=0;j<N; j++)
			printf("%3c",w[i][j]); 
		printf("\n"); 
	} 
	fun(w,a); 
	printf("The A string:\n");puts(a); 
	printf("\n\n");
	system("pause");
    return 0;
}
*/

/*t7:
#define N 5 
typedef struct student { 
long sno; 
char name[10]; 
float score[3]; 
} STU; 

void fun(char *filename, STU n) 
{
	FILE *fp; 
	fp = fopen("E:\\学习\\Prog\\C语言文件测试\\student.dat", "rb+"); 
	fseek(fp, -1L*sizeof(STU), SEEK_END); 
	fwrite(&n, sizeof(STU), 1, fp); 
	fclose(fp); 
}

int main(array<System::String ^> ^args)
{
	STU t[N]={  {10001,"MaChao", 91, 92, 77}, 
				{10002,"CaoKai", 75, 60, 88}, 
				{10003,"LiSi", 85, 70, 78}, 
				{10004,"FangFang", 90, 82, 87}, 
				{10005,"ZhangSan", 95, 80, 88}}; 
	STU n={10006,"ZhaoSi", 55, 70, 68}, ss[N]; 
	int i,j;
	FILE *fp; 
	fp = fopen("student.dat", "wb"); 
	fwrite(t, sizeof(STU), N, fp); 
	fclose(fp); 
	fp = fopen("student.dat", "rb"); 
	fread(ss, sizeof(STU), N, fp); 
	fclose(fp); 
	printf("\nThe original data :\n\n"); 
	for (j=0; j<N; j++) 
	{ 
		printf("\nNo: %ld Name: %-8s Scores: ",ss[j].sno, ss[j].name); 
			for (i=0; i<3; i++)
				printf("%6.2f ", ss[j].score[i]); 
		printf("\n");
	}
	system("pause");
    return 0;
}
*/

/*t8:
typedef struct aa 
{ int data; 
  struct aa *next; 
}NODE; 

NODE *Creatlink(int n, int m) 
{
	NODE *h=NULL, *p, *s; 
	int i; 
	p=(NODE* )malloc(sizeof(NODE)); 
	h=p; 
	p->next=NULL; 
	for(i=1; i<=n; i++) 
	{
		s=(NODE *)malloc(sizeof(NODE));
		s->data=rand()%m;
		s->next=p->next;
		p->next=s;
		p=p->next;
	} 
	return h; 
}

void outlink(NODE *h) 
{
	NODE *p; 
	p=h->next; 
	printf("\n\nTHE LIST :\n\n HEAD "); 
	while(p!=NULL) 
	{
		printf("->%d ",p->data); 
		p=p->next; 
	} 
	printf("\n"); 
}

int main(array<System::String ^> ^args)
{
//	srand(time(NULL));
	NODE *head; 
	head=Creatlink(8,22); 
	outlink(head);
	system("pause");
    return 0;
}
*/

/*t9:
#define N 80

int fun( char *s) 
{ 
	int i,sum=0;
	char* p=s;
	for(i=0;*p!='\0';i++)
	{
		if(*p<=122&&*p>=97)
			sum++;
		p++;
	}
	return sum;
}

int main(array<System::String ^> ^args)
{
	char line[N];
	int num=0;
	printf("Enter a string :\n");
	gets(line);
	num=fun( line );
	printf("The number of word is : %d\n\n",num);
	system("pause");
    return 0;
}
*/
